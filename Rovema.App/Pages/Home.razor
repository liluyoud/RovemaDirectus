@page "/"
@inject DirectusService directus

<PageTitle>RPA - Monitoramento</PageTitle>

@if (rpas == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudText Typo="Typo.h5" Class="mb-4">Rede</MudText>
    <MudGrid Spacing="5" Justify="Justify.FlexStart">
        @foreach (var rpa in rpas.Where(r => r.Type == "Ion"))
        {
            <MudItem xs="2">
                <OperationPanel Rpa="@rpa"></OperationPanel>
            </MudItem>
        }
    </MudGrid>

    <MudText Typo="Typo.h5" Class="mt-8 mb-4">Inversores</MudText>
    <MudGrid Spacing="5" Justify="Justify.FlexStart">
        @foreach (var rpa in rpas.Where(r => r.Type == "Inversor"))
        {
            <MudItem xs="2">
                <OperationPanel Rpa="@rpa"></OperationPanel>
            </MudItem>
        }
    </MudGrid>

    <MudText Typo="Typo.h5" Class="mt-8 mb-4">Solarimétricas</MudText>
    <MudGrid Spacing="5" Justify="Justify.FlexStart">
        @foreach (var rpa in rpas.Where(r => r.Type == "Solar"))
        {
            <MudItem xs="2">
                <OperationPanel Rpa="@rpa"></OperationPanel>
            </MudItem>
        }
    </MudGrid>

    <MudText Typo="Typo.h5" Class="mt-8 mb-4">Clima</MudText>
    <MudGrid Spacing="5" Justify="Justify.FlexStart">
        @foreach (var rpa in rpas.Where(r => r.Type == "Clima"))
        {
            <MudItem xs="2">
                <OperationPanel Rpa="@rpa"></OperationPanel>
            </MudItem>
        }
    </MudGrid>
  
}


@code {
    private List<RpaModel>? rpas;

    protected override async Task OnInitializedAsync()
    {
        var query = new DirectusQuery()
                   .Fields("id,name,type,refresh,timeout")
                   .Filter("status", Operation.NotEqual, "archived")
                   .Sort("type,name")
                   .Build();
        rpas = await directus.GetItemsAsync<List<RpaModel>>("rpas", query);
    }
}
