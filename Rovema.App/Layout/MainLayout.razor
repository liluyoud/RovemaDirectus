@inherits LayoutComponentBase

@inject NavigationManager Navigation
@inject AuthenticationStateProvider Auth

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="0">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="NavToggle" />
                <MudSpacer />
                <MudIconButton Icon="@DarkLightIcon" title="@DarkLightTitle" OnClick="DarkModeToggle" />
                <LoginStatus />
            </MudAppBar>

            <MudDrawer @bind-Open="_isNavOpen" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">Rovema PME</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>

            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-4 pt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isNavOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    public Palette CurrentPalette => _isDarkMode ? LayoutHelper.DarkPalette : LayoutHelper.LightPalette;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new() {
            PaletteLight = LayoutHelper.LightPalette,
            PaletteDark = LayoutHelper.DarkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void NavToggle()
    {
        _isNavOpen = !_isNavOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    public string DarkLightIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.LightMode,
        false => Icons.Material.Rounded.DarkMode,
    };

    public string DarkLightTitle => _isDarkMode switch
    {
        true => "Modo Claro",
        false => "Modo Escuro",
    };
}