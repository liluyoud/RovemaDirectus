@inherits LayoutComponentBase

@inject NavigationManager Navigation
@inject AuthenticationStateProvider Auth

<MudThemeProvider @ref="@_mudThemeProvider" IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="0">
                <MudToggleIconButton @bind-Toggled="@_isNavOpen" Edge="Edge.Start"
                                     Icon="@Icons.Material.Filled.Menu" Title="Mostrar Menu" Color="Color.Inherit"
                                     ToggledIcon="@Icons.Material.Filled.MenuOpen" ToggledTitle="Esconder Menu" ToggledColor="Color.Inherit" />
                <MudSpacer />

                <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                                     Icon="@Icons.Material.Filled.DarkMode" Title="Modo Escuro" Color="Color.Inherit"
                                     ToggledIcon="@Icons.Material.Filled.LightMode" ToggledTitle="Modo Claro" ToggledColor="Color.Inherit" />
                <LoginStatus />
            </MudAppBar>

            <MudDrawer @bind-Open="_isNavOpen" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">Rovema PME</MudText>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>

            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-4 pt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code {

    bool _isNavOpen = true;
    private bool _isDarkMode;

    private MudThemeProvider? _mudThemeProvider;

    private void DrawerToggle()
    {
        _isNavOpen = !_isNavOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider is not null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
}